[gd_scene load_steps=9 format=2]

[ext_resource path="res://UI/HUD.gd" type="Script" id=1]
[ext_resource path="res://Assets/Orbitron Black.ttf" type="DynamicFontData" id=2]

[sub_resource type="DynamicFont" id=1]
font_data = ExtResource( 2 )

[sub_resource type="DynamicFont" id=2]
font_data = ExtResource( 2 )

[sub_resource type="Shader" id=9]
code = "// Fire shader

shader_type canvas_item;

uniform vec2 fireMovement = vec2(-0.01, -0.5);
uniform vec2 distortionMovement = vec2(-0.01, -0.3);
uniform float normalStrength = 40.0;
uniform float distortionStrength=0.1;


/** NOISE **/
float rand(vec2 co) {
	return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

vec2 hash( vec2 p ) {
	p = vec2( dot(p,vec2(127.1,311.7)),
			dot(p,vec2(269.5,183.3)) );

	return -1.0 + 2.0*fract(sin(p)*43758.5453123);
}

float noise( in vec2 p ) {
	float K1 = 0.366025404; // (sqrt(3)-1)/2;
	float K2 = 0.211324865; // (3-sqrt(3))/6;

	vec2 i = floor( p + (p.x+p.y)*K1 );

	vec2 a = p - i + (i.x+i.y)*K2;
	vec2 o = step(a.yx,a.xy);    
	vec2 b = a - o + K2;
	vec2 c = a - 1.0 + 2.0*K2;

	vec3 h = max( 0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );

	vec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));

	return dot( n, vec3(70.0) );
}

float fbm ( in vec2 p ) {
	float f = 0.0;
	mat2 m = mat2(vec2(1.6,  1.2), vec2(-1.2,  1.6 ));
	f  = 0.5000*noise(p); p = m*p;
	f += 0.2500*noise(p); p = m*p;
	f += 0.1250*noise(p); p = m*p;
	f += 0.0625*noise(p); p = m*p;
	f = 0.5 + 0.5 * f;
	return f;
}

/** DISTORTION **/
vec3 bumpMap(vec2 uv) { 
	vec2 iResolution = vec2(1024,600);
	vec2 s = 1. / iResolution.xy;
	float p =  fbm(uv);
	float h1 = fbm(uv + s * vec2(1., 0));
	float v1 = fbm(uv + s * vec2(0, 1.));
		 
	vec2 xy = (p - vec2(h1, v1)) * normalStrength;
	return vec3(xy + .5, 1.);
}

/** MAIN **/
void fragment() {
	float timeScale = TIME * 1.0;
	vec2 iResolution = vec2(1024,600);
	vec2 uv = FRAGCOORD.xy/iResolution.xy;

	vec3 normal = bumpMap(uv * vec2(1.0, 0.3) + distortionMovement * timeScale);
	
	vec2 displacement = clamp((normal.xy - .5) * distortionStrength, -1., 1.);
	uv += displacement; 
	
	vec2 uvT = (uv * vec2(1.0, 0.5)) + timeScale * fireMovement;
	float n = pow(fbm(8.0 * uvT), 1.0);    
	
	float gradient = pow(1.0 - uv.y, 2.0) * 5.;
	float finalNoise = n * gradient;
	
	vec3 color = finalNoise * vec3(2.*n, 2.*n*n*n, n*n*n*n);
	COLOR = vec4(color, 1.);
}"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 9 )
shader_param/fireMovement = Vector2( -0.01, -0.5 )
shader_param/distortionMovement = Vector2( -0.01, -0.3 )
shader_param/normalStrength = 40.0
shader_param/distortionStrength = 0.1

[sub_resource type="StyleBoxFlat" id=7]
bg_color = Color( 1, 1, 1, 1 )

[sub_resource type="StyleBoxEmpty" id=8]

[node name="HUD" type="Control"]
pause_mode = 2
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 1 )

[node name="Background" type="ColorRect" parent="."]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -29.0
color = Color( 0, 0, 0, 0.25098 )

[node name="Background2" type="ColorRect" parent="."]
anchor_right = 1.0
margin_top = 10.0
margin_bottom = 50.0
color = Color( 0, 0, 0, 0.25098 )

[node name="Score" type="Label" parent="."]
margin_left = 20.0
margin_right = 220.0
margin_bottom = 60.0
custom_fonts/font = SubResource( 1 )
text = "Score: "
valign = 1

[node name="Time" type="Label" parent="."]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -220.0
margin_right = -20.0
margin_bottom = 60.0
custom_fonts/font = SubResource( 2 )
text = "Time: "
align = 2
valign = 1

[node name="ColorRect" type="ColorRect" parent="."]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -200.0
margin_top = 20.0
margin_right = 200.0
margin_bottom = 45.0
color = Color( 0.203922, 0.227451, 0.25098, 1 )

[node name="Fever" type="ProgressBar" parent="."]
material = SubResource( 10 )
use_parent_material = true
anchor_left = 0.5
anchor_right = 0.5
margin_left = -200.0
margin_top = 20.0
margin_right = 200.0
margin_bottom = 45.0
custom_styles/fg = SubResource( 7 )
custom_styles/bg = SubResource( 8 )
percent_visible = false

[node name="Indicator_Container" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Timer" type="Timer" parent="."]
autostart = true

[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
